{
  "version": 3,
  "sources": ["../../vuetify/src/components/VAppBar/VAppBar.tsx", "../../vuetify/src/components/VToolbar/VToolbar.tsx", "../../vuetify/src/components/transitions/createTransition.ts", "../../vuetify/src/components/transitions/expand-transition.ts", "../../vuetify/src/components/transitions/dialog-transition.tsx", "../../vuetify/src/components/transitions/index.ts", "../../vuetify/src/components/VToolbar/VToolbarTitle.tsx", "../../vuetify/src/composables/scroll.ts", "../../vuetify/src/components/VAppBar/VAppBarNavIcon.tsx", "../../vuetify/src/components/VToolbar/VToolbarItems.tsx", "../../vuetify/src/components/VAppBar/VAppBarTitle.tsx"],
  "sourcesContent": ["// Styles\nimport './VAppBar.sass'\n\n// Components\nimport { makeVToolbarProps, VToolbar } from '@/components/VToolbar/VToolbar'\n\n// Composables\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { makeScrollProps, useScroll } from '@/composables/scroll'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useSsrBoot } from '@/composables/ssrBoot'\n\n// Utilities\nimport { computed, ref, toRef, watch } from 'vue'\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VToolbarSlots } from '@/components/VToolbar/VToolbar'\n\nexport const VAppBar = genericComponent<VToolbarSlots>()({\n  name: 'VAppBar',\n\n  props: {\n    scrollBehavior: String,\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n    location: {\n      type: String as PropType<'top' | 'bottom'>,\n      default: 'top',\n      validator: (value: any) => ['top', 'bottom'].includes(value),\n    },\n\n    ...makeVToolbarProps(),\n    ...makeLayoutItemProps(),\n    ...makeScrollProps(),\n\n    height: {\n      type: [Number, String],\n      default: 64,\n    },\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const vToolbarRef = ref<VToolbar>()\n    const isActive = useProxiedModel(props, 'modelValue')\n    const scrollBehavior = computed(() => {\n      const behavior = new Set(props.scrollBehavior?.split(' ') ?? [])\n      return {\n        hide: behavior.has('hide'),\n        // fullyHide: behavior.has('fully-hide'),\n        inverted: behavior.has('inverted'),\n        collapse: behavior.has('collapse'),\n        elevate: behavior.has('elevate'),\n        fadeImage: behavior.has('fade-image'),\n        // shrink: behavior.has('shrink'),\n      }\n    })\n    const canScroll = computed(() => {\n      const behavior = scrollBehavior.value\n      return (\n        behavior.hide ||\n        // behavior.fullyHide ||\n        behavior.inverted ||\n        behavior.collapse ||\n        behavior.elevate ||\n        behavior.fadeImage ||\n        // behavior.shrink ||\n        !isActive.value\n      )\n    })\n    const {\n      currentScroll,\n      scrollThreshold,\n      isScrollingUp,\n      scrollRatio,\n    } = useScroll(props, { canScroll })\n\n    const isCollapsed = computed(() => props.collapse || (\n      scrollBehavior.value.collapse &&\n      (scrollBehavior.value.inverted ? scrollRatio.value > 0 : scrollRatio.value === 0)\n    ))\n    const isFlat = computed(() => props.flat || (\n      scrollBehavior.value.elevate &&\n      (scrollBehavior.value.inverted ? currentScroll.value > 0 : currentScroll.value === 0)\n    ))\n    const opacity = computed(() => (\n      scrollBehavior.value.fadeImage\n        ? (scrollBehavior.value.inverted ? 1 - scrollRatio.value : scrollRatio.value)\n        : undefined\n    ))\n    const height = computed(() => {\n      if (scrollBehavior.value.hide && scrollBehavior.value.inverted) return 0\n\n      const height = vToolbarRef.value?.contentHeight ?? 0\n      const extensionHeight = vToolbarRef.value?.extensionHeight ?? 0\n\n      return (height + extensionHeight)\n    })\n    function setActive () {\n      if (scrollBehavior.value.hide) {\n        if (scrollBehavior.value.inverted) {\n          isActive.value = currentScroll.value > scrollThreshold.value\n        } else {\n          isActive.value = isScrollingUp.value || (currentScroll.value < scrollThreshold.value)\n        }\n      } else {\n        isActive.value = true\n      }\n    }\n\n    watch(currentScroll, setActive, { immediate: true })\n    watch(scrollBehavior, setActive)\n\n    const { ssrBootStyles } = useSsrBoot()\n    const { layoutItemStyles } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: toRef(props, 'location'),\n      layoutSize: height,\n      elementSize: ref(undefined),\n      active: isActive,\n      absolute: toRef(props, 'absolute'),\n    })\n\n    useRender(() => {\n      const [toolbarProps] = VToolbar.filterProps(props)\n\n      return (\n        <VToolbar\n          ref={ vToolbarRef }\n          class={[\n            'v-app-bar',\n            {\n              'v-app-bar--bottom': props.location === 'bottom',\n            },\n            props.class,\n          ]}\n          style={[\n            {\n              ...layoutItemStyles.value,\n              '--v-toolbar-image-opacity': opacity.value,\n              height: undefined,\n              ...ssrBootStyles.value,\n            },\n            props.style,\n          ]}\n          { ...toolbarProps }\n          collapse={ isCollapsed.value }\n          flat={ isFlat.value }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VAppBar = InstanceType<typeof VAppBar>\n", "// Styles\nimport './VToolbar.sass'\n\n// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VExpandTransition } from '@/components/transitions'\nimport { VImg } from '@/components/VImg'\nimport { VToolbarTitle } from './VToolbarTitle'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\n\n// Utilities\nimport { computed, ref, toRef } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst allowedDensities = [null, 'prominent', 'default', 'comfortable', 'compact'] as const\n\nexport type Density = null | 'prominent' | 'default' | 'comfortable' | 'compact'\n\nexport const makeVToolbarProps = propsFactory({\n  absolute: Boolean,\n  collapse: Boolean,\n  color: String,\n  density: {\n    type: String as PropType<Density>,\n    default: 'default',\n    validator: (v: any) => allowedDensities.includes(v),\n  },\n  extended: Boolean,\n  extensionHeight: {\n    type: [Number, String],\n    default: 48,\n  },\n  flat: Boolean,\n  floating: Boolean,\n  height: {\n    type: [Number, String],\n    default: 64,\n  },\n  image: String,\n  title: String,\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({ tag: 'header' }),\n  ...makeThemeProps(),\n}, 'v-toolbar')\n\nexport type VToolbarSlots = {\n  default: []\n  image: []\n  prepend: []\n  append: []\n  title: []\n  extension: []\n}\n\nexport const VToolbar = genericComponent<VToolbarSlots>()({\n  name: 'VToolbar',\n\n  props: makeVToolbarProps(),\n\n  setup (props, { slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { borderClasses } = useBorder(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { themeClasses } = provideTheme(props)\n\n    const isExtended = ref(!!(props.extended || slots.extension?.()))\n    const contentHeight = computed(() => parseInt((\n      Number(props.height) +\n      (props.density === 'prominent' ? Number(props.height) : 0) -\n      (props.density === 'comfortable' ? 8 : 0) -\n      (props.density === 'compact' ? 16 : 0)\n    ), 10))\n    const extensionHeight = computed(() => isExtended.value\n      ? parseInt((\n        Number(props.extensionHeight) +\n        (props.density === 'prominent' ? Number(props.extensionHeight) : 0) -\n        (props.density === 'comfortable' ? 4 : 0) -\n        (props.density === 'compact' ? 8 : 0)\n      ), 10)\n      : 0\n    )\n\n    provideDefaults({\n      VBtn: {\n        variant: 'text',\n      },\n    })\n\n    useRender(() => {\n      const hasTitle = !!(props.title || slots.title)\n      const hasImage = !!(slots.image || props.image)\n\n      const extension = slots.extension?.()\n      isExtended.value = !!(props.extended || extension)\n\n      return (\n        <props.tag\n          class={[\n            'v-toolbar',\n            {\n              'v-toolbar--absolute': props.absolute,\n              'v-toolbar--collapse': props.collapse,\n              'v-toolbar--flat': props.flat,\n              'v-toolbar--floating': props.floating,\n              [`v-toolbar--density-${props.density}`]: true,\n            },\n            backgroundColorClasses.value,\n            borderClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            themeClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n        >\n          { hasImage && (\n            <div key=\"image\" class=\"v-toolbar__image\">\n              { !slots.image ? (\n                <VImg\n                  key=\"image-img\"\n                  cover\n                  src={ props.image }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"image-defaults\"\n                  disabled={ !props.image }\n                  defaults={{\n                    VImg: {\n                      cover: true,\n                      src: props.image,\n                    },\n                  }}\n                  v-slots:default={ slots.image }\n                />\n              )}\n            </div>\n          )}\n\n          <VDefaultsProvider\n            defaults={{\n              VTabs: {\n                height: convertToUnit(contentHeight.value),\n              },\n            }}\n          >\n            <div\n              class=\"v-toolbar__content\"\n              style={{ height: convertToUnit(contentHeight.value) }}\n            >\n              { slots.prepend && (\n                <div class=\"v-toolbar__prepend\">\n                  { slots.prepend?.() }\n                </div>\n              )}\n\n              { hasTitle && (\n                <VToolbarTitle key=\"title\" text={ props.title }>\n                  {{ text: slots.title }}\n                </VToolbarTitle>\n              )}\n\n              { slots.default?.() }\n\n              { slots.append && (\n                <div class=\"v-toolbar__append\">\n                  { slots.append?.() }\n                </div>\n              )}\n            </div>\n          </VDefaultsProvider>\n\n          <VDefaultsProvider\n            defaults={{\n              VTabs: {\n                height: convertToUnit(extensionHeight.value),\n              },\n            }}\n          >\n            <VExpandTransition>\n              { isExtended.value && (\n                <div\n                  class=\"v-toolbar__extension\"\n                  style={{ height: convertToUnit(extensionHeight.value) }}\n                >\n                  { extension }\n                </div>\n              )}\n            </VExpandTransition>\n          </VDefaultsProvider>\n        </props.tag>\n      )\n    })\n\n    return {\n      contentHeight,\n      extensionHeight,\n    }\n  },\n})\n\nexport type VToolbar = InstanceType<typeof VToolbar>\n", "// Utilities\nimport { h, Transition, TransitionGroup } from 'vue'\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { FunctionalComponent, PropType } from 'vue'\n\nexport function createCssTransition (\n  name: string,\n  origin = 'center center',\n  mode?: string\n) {\n  return genericComponent()({\n    name,\n\n    props: {\n      disabled: Boolean,\n      group: Boolean,\n      hideOnLeave: Boolean,\n      leaveAbsolute: Boolean,\n      mode: {\n        type: String,\n        default: mode,\n      },\n      origin: {\n        type: String,\n        default: origin,\n      },\n    },\n\n    setup (props, { slots }) {\n      const functions = {\n        onBeforeEnter (el: HTMLElement) {\n          el.style.transformOrigin = props.origin\n        },\n        onLeave (el: HTMLElement) {\n          if (props.leaveAbsolute) {\n            const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = el\n            el._transitionInitialStyles = {\n              position: el.style.position,\n              top: el.style.top,\n              left: el.style.left,\n              width: el.style.width,\n              height: el.style.height,\n            }\n            el.style.position = 'absolute'\n            el.style.top = `${offsetTop}px`\n            el.style.left = `${offsetLeft}px`\n            el.style.width = `${offsetWidth}px`\n            el.style.height = `${offsetHeight}px`\n          }\n\n          if (props.hideOnLeave) {\n            el.style.setProperty('display', 'none', 'important')\n          }\n        },\n        onAfterLeave (el: HTMLElement) {\n          if (props.leaveAbsolute && el?._transitionInitialStyles) {\n            const { position, top, left, width, height } = el._transitionInitialStyles\n            delete el._transitionInitialStyles\n            el.style.position = position || ''\n            el.style.top = top || ''\n            el.style.left = left || ''\n            el.style.width = width || ''\n            el.style.height = height || ''\n          }\n        },\n      }\n\n      return () => {\n        const tag = props.group ? TransitionGroup : Transition\n\n        return h(tag as FunctionalComponent, {\n          name: props.disabled ? '' : name,\n          css: !props.disabled,\n          ...(props.group ? undefined : { mode: props.mode }),\n          ...(props.disabled ? {} : functions),\n        }, slots.default)\n      }\n    },\n  })\n}\n\nexport function createJavascriptTransition (\n  name: string,\n  functions: Record<string, any>,\n  mode = 'in-out'\n) {\n  return genericComponent()({\n    name,\n\n    props: {\n      mode: {\n        type: String as PropType<'in-out' | 'out-in' | 'default'>,\n        default: mode,\n      },\n      disabled: Boolean,\n    },\n\n    setup (props, { slots }) {\n      return () => {\n        return h(Transition, {\n          name: props.disabled ? '' : name,\n          css: !props.disabled,\n          // mode: props.mode, // TODO: vuejs/vue-next#3104\n          ...(props.disabled ? {} : functions),\n        }, slots.default)\n      }\n    },\n  })\n}\n", "// Utilities\nimport { camelize } from 'vue'\n\ninterface HTMLExpandElement extends HTMLElement {\n  _parent?: (Node & ParentNode & HTMLElement) | null\n  _initialStyle?: {\n    transition: string\n    overflow: string\n    height?: string | null\n    width?: string | null\n  }\n}\n\nexport default function (expandedParentClass = '', x = false) {\n  const sizeProperty = x ? 'width' : 'height' as 'width' | 'height'\n  const offsetProperty = camelize(`offset-${sizeProperty}`) as 'offsetHeight' | 'offsetWidth'\n\n  return {\n    onBeforeEnter (el: HTMLExpandElement) {\n      el._parent = el.parentNode as (Node & ParentNode & HTMLElement) | null\n      el._initialStyle = {\n        transition: el.style.transition,\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty],\n      }\n    },\n\n    onEnter (el: HTMLExpandElement) {\n      const initialStyle = el._initialStyle!\n\n      el.style.setProperty('transition', 'none', 'important')\n      // Hide overflow to account for collapsed margins in the calculated height\n      el.style.overflow = 'hidden'\n      const offset = `${el[offsetProperty]}px`\n\n      el.style[sizeProperty] = '0'\n\n      void el.offsetHeight // force reflow\n\n      el.style.transition = initialStyle.transition\n\n      if (expandedParentClass && el._parent) {\n        el._parent.classList.add(expandedParentClass)\n      }\n\n      requestAnimationFrame(() => {\n        el.style[sizeProperty] = offset\n      })\n    },\n\n    onAfterEnter: resetStyles,\n    onEnterCancelled: resetStyles,\n\n    onLeave (el: HTMLExpandElement) {\n      el._initialStyle = {\n        transition: '',\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty],\n      }\n\n      el.style.overflow = 'hidden'\n      el.style[sizeProperty] = `${el[offsetProperty]}px`\n      void el.offsetHeight // force reflow\n\n      requestAnimationFrame(() => (el.style[sizeProperty] = '0'))\n    },\n\n    onAfterLeave,\n    onLeaveCancelled: onAfterLeave,\n  }\n\n  function onAfterLeave (el: HTMLExpandElement) {\n    if (expandedParentClass && el._parent) {\n      el._parent.classList.remove(expandedParentClass)\n    }\n    resetStyles(el)\n  }\n\n  function resetStyles (el: HTMLExpandElement) {\n    const size = el._initialStyle![sizeProperty]\n    el.style.overflow = el._initialStyle!.overflow\n    if (size != null) el.style[sizeProperty] = size\n    delete el._initialStyle\n  }\n}\n", "// Components\nimport { Transition } from 'vue'\n\n// Utilities\nimport {\n  acceleratedEasing,\n  animate,\n  deceleratedEasing,\n  genericComponent,\n  nullifyTransforms,\n  standardEasing,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VDialogTransition = genericComponent()({\n  name: 'VDialogTransition',\n\n  props: {\n    target: Object as PropType<HTMLElement>,\n  },\n\n  setup (props, { slots }) {\n    const functions = {\n      onBeforeEnter (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n        ;(el as HTMLElement).style.visibility = 'hidden'\n      },\n      async onEnter (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        ;(el as HTMLElement).style.visibility = ''\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n          {},\n        ], {\n          duration: 225 * speed,\n          easing: deceleratedEasing,\n        })\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            { opacity: 0 },\n            { opacity: 0, offset: 0.33 },\n            {},\n          ], {\n            duration: 225 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n        animation.finished.then(() => done())\n      },\n      onAfterEnter (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n      onBeforeLeave (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n      },\n      async onLeave (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          {},\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n        ], {\n          duration: 125 * speed,\n          easing: acceleratedEasing,\n        })\n        animation.finished.then(() => done())\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            {},\n            { opacity: 0, offset: 0.2 },\n            { opacity: 0 },\n          ], {\n            duration: 125 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n      },\n      onAfterLeave (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n    }\n\n    return () => {\n      return props.target\n        ? (\n          <Transition\n            name=\"dialog-transition\"\n            { ...functions }\n            css={ false }\n            v-slots={ slots }\n          />\n        )\n        : <Transition name=\"dialog-transition\" v-slots={ slots } />\n    }\n  },\n})\n\n/** Animatable children (card, sheet, list) */\nfunction getChildren (el: Element) {\n  const els = el.querySelector(':scope > .v-card, :scope > .v-sheet, :scope > .v-list')?.children\n  return els && [...els]\n}\n\nfunction getDimensions (target: HTMLElement, el: HTMLElement) {\n  const targetBox = target.getBoundingClientRect()\n  const elBox = nullifyTransforms(el)\n  const [originX, originY] = getComputedStyle(el).transformOrigin.split(' ').map(v => parseFloat(v))\n\n  const [anchorSide, anchorOffset] = getComputedStyle(el).getPropertyValue('--v-overlay-anchor-origin').split(' ')\n\n  let offsetX = targetBox.left + targetBox.width / 2\n  if (anchorSide === 'left' || anchorOffset === 'left') {\n    offsetX -= targetBox.width / 2\n  } else if (anchorSide === 'right' || anchorOffset === 'right') {\n    offsetX += targetBox.width / 2\n  }\n\n  let offsetY = targetBox.top + targetBox.height / 2\n  if (anchorSide === 'top' || anchorOffset === 'top') {\n    offsetY -= targetBox.height / 2\n  } else if (anchorSide === 'bottom' || anchorOffset === 'bottom') {\n    offsetY += targetBox.height / 2\n  }\n\n  const tsx = targetBox.width / elBox.width\n  const tsy = targetBox.height / elBox.height\n  const maxs = Math.max(1, tsx, tsy)\n  const sx = tsx / maxs || 0\n  const sy = tsy / maxs || 0\n\n  // Animate elements larger than 12% of the screen area up to 1.5x slower\n  const asa = (elBox.width * elBox.height) / (window.innerWidth * window.innerHeight)\n  const speed = asa > 0.12\n    ? Math.min(1.5, (asa - 0.12) * 10 + 1)\n    : 1\n\n  return {\n    x: offsetX - (originX + elBox.left),\n    y: offsetY - (originY + elBox.top),\n    sx,\n    sy,\n    speed,\n  }\n}\n\nexport type VDialogTransition = InstanceType<typeof VDialogTransition>\n", "import {\n  createCssTransition,\n  createJavascriptTransition,\n} from './createTransition'\n\nimport ExpandTransitionGenerator from './expand-transition'\n\n// Component specific transitions\nexport const VFabTransition = createCssTransition('fab-transition', 'center center', 'out-in')\n\n// Generic transitions\nexport const VDialogBottomTransition = createCssTransition('dialog-bottom-transition')\nexport const VDialogTopTransition = createCssTransition('dialog-top-transition')\nexport const VFadeTransition = createCssTransition('fade-transition')\nexport const VScaleTransition = createCssTransition('scale-transition')\nexport const VScrollXTransition = createCssTransition('scroll-x-transition')\nexport const VScrollXReverseTransition = createCssTransition('scroll-x-reverse-transition')\nexport const VScrollYTransition = createCssTransition('scroll-y-transition')\nexport const VScrollYReverseTransition = createCssTransition('scroll-y-reverse-transition')\nexport const VSlideXTransition = createCssTransition('slide-x-transition')\nexport const VSlideXReverseTransition = createCssTransition('slide-x-reverse-transition')\nexport const VSlideYTransition = createCssTransition('slide-y-transition')\nexport const VSlideYReverseTransition = createCssTransition('slide-y-reverse-transition')\n\n// Javascript transitions\nexport const VExpandTransition = createJavascriptTransition('expand-transition', ExpandTransitionGenerator())\nexport const VExpandXTransition = createJavascriptTransition('expand-x-transition', ExpandTransitionGenerator('', true))\n\nexport { VDialogTransition } from './dialog-transition'\n\nexport type VFabTransition = InstanceType<typeof VFabTransition>\nexport type VDialogBottomTransition = InstanceType<typeof VDialogBottomTransition>\nexport type VDialogTopTransition = InstanceType<typeof VDialogTopTransition>\nexport type VFadeTransition = InstanceType<typeof VFadeTransition>\nexport type VScaleTransition = InstanceType<typeof VScaleTransition>\nexport type VScrollXTransition = InstanceType<typeof VScrollXTransition>\nexport type VScrollXReverseTransition = InstanceType<typeof VScrollXReverseTransition>\nexport type VScrollYTransition = InstanceType<typeof VScrollYTransition>\nexport type VScrollYReverseTransition = InstanceType<typeof VScrollYReverseTransition>\nexport type VSlideXTransition = InstanceType<typeof VSlideXTransition>\nexport type VSlideXReverseTransition = InstanceType<typeof VSlideXReverseTransition>\nexport type VSlideYTransition = InstanceType<typeof VSlideYTransition>\nexport type VSlideYReverseTransition = InstanceType<typeof VSlideYReverseTransition>\nexport type VExpandTransition = InstanceType<typeof VExpandTransition>\nexport type VExpandXTransition = InstanceType<typeof VExpandXTransition>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVToolbarTitleProps = propsFactory({\n  text: String,\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'v-toolbar-title')\n\nexport type VToolbarTitleSlots = {\n  default: []\n  text: []\n}\n\nexport const VToolbarTitle = genericComponent<VToolbarTitleSlots>()({\n  name: 'VToolbarTitle',\n\n  props: makeVToolbarTitleProps(),\n\n  setup (props, { slots }) {\n    useRender(() => {\n      const hasText = !!(slots.default || slots.text || props.text)\n\n      return (\n        <props.tag\n          class={[\n            'v-toolbar-title',\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { hasText && (\n            <div class=\"v-toolbar-title__placeholder\">\n              { slots.text ? slots.text() : props.text }\n\n              { slots.default?.() }\n            </div>\n          )}\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VToolbarTitle = InstanceType<typeof VToolbarTitle>\n", "// Utilities\nimport {\n  computed,\n  getCurrentInstance,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  watch,\n} from 'vue'\nimport { clamp, consoleWarn, propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\nexport interface ScrollProps {\n  scrollTarget?: string\n  scrollThreshold?: string | number\n}\n\nexport interface ThresholdMetCallbackData {\n  isScrollingUp: boolean\n  currentThreshold: number\n  savedScroll: Ref<number>\n}\n\n// Composables\nexport const makeScrollProps = propsFactory({\n  scrollTarget: {\n    type: String,\n  },\n  scrollThreshold: {\n    type: [String, Number],\n    default: 300,\n  },\n}, 'scroll')\n\nexport interface ScrollArguments {\n  canScroll?: Readonly<Ref<boolean>>\n}\n\nexport function useScroll (\n  props: ScrollProps,\n  args: ScrollArguments = {},\n) {\n  const { canScroll } = args\n  let previousScroll = 0\n  const target = ref<Element | Window | null>(null)\n  const currentScroll = ref(0)\n  const savedScroll = ref(0)\n  const currentThreshold = ref(0)\n  const isScrollActive = ref(false)\n  const isScrollingUp = ref(false)\n\n  const scrollThreshold = computed(() => {\n    return Number(props.scrollThreshold)\n  })\n\n  /**\n   * 1: at top\n   * 0: at threshold\n   */\n  const scrollRatio = computed(() => {\n    return clamp(((scrollThreshold.value - currentScroll.value) / scrollThreshold.value) || 0)\n  })\n\n  const onScroll = () => {\n    const targetEl = target.value\n\n    if (!targetEl || (canScroll && !canScroll.value)) return\n\n    previousScroll = currentScroll.value\n    currentScroll.value = ('window' in targetEl) ? targetEl.pageYOffset : targetEl.scrollTop\n\n    isScrollingUp.value = currentScroll.value < previousScroll\n    currentThreshold.value = Math.abs(currentScroll.value - scrollThreshold.value)\n  }\n\n  watch(isScrollingUp, () => {\n    savedScroll.value = savedScroll.value || currentScroll.value\n  })\n\n  watch(isScrollActive, () => {\n    savedScroll.value = 0\n  })\n\n  onMounted(() => {\n    watch(() => props.scrollTarget, scrollTarget => {\n      const newTarget = scrollTarget ? document.querySelector(scrollTarget) : window\n\n      if (!newTarget) {\n        consoleWarn(`Unable to locate element with identifier ${scrollTarget}`, getCurrentInstance())\n        return\n      }\n\n      if (newTarget === target.value) return\n\n      target.value?.removeEventListener('scroll', onScroll)\n      target.value = newTarget\n      target.value.addEventListener('scroll', onScroll, { passive: true })\n    }, { immediate: true })\n  })\n\n  onBeforeUnmount(() => {\n    target.value?.removeEventListener('scroll', onScroll)\n  })\n\n  // Do we need this? If yes - seems that\n  // there's no need to expose onScroll\n  canScroll && watch(canScroll, onScroll, { immediate: true })\n\n  return {\n    scrollThreshold,\n    currentScroll,\n    currentThreshold,\n    isScrollActive,\n    scrollRatio,\n\n    // required only for testing\n    // probably can be removed\n    // later (2 chars chlng)\n    isScrollingUp,\n    savedScroll,\n  }\n}\n", "// Components\nimport { VBtn } from '@/components/VBtn'\n\nimport { makeVBtnProps } from '@/components/VBtn/VBtn'\n\n// Utilities\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { VBtnSlots } from '@/components/VBtn/VBtn'\n\nexport const VAppBarNavIcon = genericComponent<VBtnSlots>()({\n  name: 'VAppBarNavIcon',\n\n  props: makeVBtnProps({\n    icon: '$menu',\n    variant: 'text' as const,\n  }),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <VBtn\n        { ...props }\n        class={[\n          'v-app-bar-nav-icon',\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VAppBarNavIcon = InstanceType<typeof VAppBarNavIcon>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeVariantProps } from '@/composables/variant'\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { genericComponent, useRender } from '@/util'\nimport { toRef } from 'vue'\n\nexport const VToolbarItems = genericComponent()({\n  name: 'VToolbarItems',\n\n  props: {\n    ...makeComponentProps(),\n    ...makeVariantProps({ variant: 'text' }),\n  },\n\n  setup (props, { slots }) {\n    provideDefaults({\n      VBtn: {\n        color: toRef(props, 'color'),\n        height: 'inherit',\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-toolbar-items',\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { slots.default?.() }\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VToolbarItems = InstanceType<typeof VToolbarItems>\n", "// Components\nimport { VToolbarTitle } from '@/components/VToolbar'\n\n// Utilities\nimport { makeVToolbarTitleProps } from '@/components/VToolbar/VToolbarTitle'\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { VToolbarTitleSlots } from '@/components/VToolbar/VToolbarTitle'\n\nexport const VAppBarTitle = genericComponent<VToolbarTitleSlots>()({\n  name: 'VAppBarTitle',\n\n  props: makeVToolbarTitleProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <VToolbarTitle\n        { ...props }\n        class=\"v-app-bar-title\"\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VAppBarTitle = InstanceType<typeof VAppBarTitle>\n"],
  "mappings": "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",
  "names": ["createCssTransition", "name", "origin", "arguments", "length", "undefined", "mode", "genericComponent", "props", "disabled", "Boolean", "group", "hideOnLeave", "leaveAbsolute", "type", "String", "default", "setup", "_ref", "slots", "functions", "onBeforeEnter", "el", "style", "transformOrigin", "onLeave", "offsetTop", "offsetLeft", "offsetWidth", "offsetHeight", "_transitionInitialStyles", "position", "top", "left", "width", "height", "setProperty", "onAfterLeave", "tag", "TransitionGroup", "Transition", "h", "css", "createJavascriptTransition", "_ref2", "expandedParentClass", "arguments", "length", "undefined", "x", "sizeProperty", "offsetProperty", "camelize", "onBeforeEnter", "el", "_parent", "parentNode", "_initialStyle", "transition", "style", "overflow", "onEnter", "initialStyle", "setProperty", "offset", "offsetHeight", "classList", "add", "requestAnimationFrame", "onAfterEnter", "resetStyles", "onEnterCancelled", "onLeave", "onAfterLeave", "onLeaveCancelled", "remove", "size", "VDialogTransition", "genericComponent", "name", "props", "target", "Object", "setup", "_ref", "slots", "functions", "onBeforeEnter", "el", "style", "pointerEvents", "visibility", "onEnter", "done", "Promise", "resolve", "requestAnimationFrame", "x", "y", "sx", "sy", "speed", "getDimensions", "animation", "animate", "transform", "opacity", "duration", "easing", "deceleratedEasing", "getChildren", "forEach", "offset", "standardEasing", "finished", "then", "onAfterEnter", "removeProperty", "onBeforeLeave", "onLeave", "acceleratedEasing", "onAfterLeave", "_createVNode", "Transition", "_mergeProps", "els", "querySelector", "children", "targetBox", "getBoundingClientRect", "elBox", "nullifyTransforms", "originX", "originY", "getComputedStyle", "transformOrigin", "split", "map", "v", "parseFloat", "anchorSide", "anchorOffset", "getPropertyValue", "offsetX", "left", "width", "offsetY", "top", "height", "tsx", "tsy", "maxs", "Math", "max", "asa", "window", "innerWidth", "innerHeight", "min", "VFabTransition", "createCssTransition", "VDialogBottomTransition", "VDialogTopTransition", "VFadeTransition", "VScaleTransition", "VScrollXTransition", "VScrollXReverseTransition", "VScrollYTransition", "VScrollYReverseTransition", "VSlideXTransition", "VSlideXReverseTransition", "VSlideYTransition", "VSlideYReverseTransition", "VExpandTransition", "createJavascriptTransition", "ExpandTransitionGenerator", "VExpandXTransition", "makeVToolbarTitleProps", "propsFactory", "text", "String", "makeComponentProps", "makeTagProps", "VToolbarTitle", "genericComponent", "name", "props", "setup", "_ref", "slots", "useRender", "hasText", "default", "_createVNode", "tag", "class", "style", "allowedDensities", "makeVToolbarProps", "propsFactory", "absolute", "Boolean", "collapse", "color", "String", "density", "type", "default", "validator", "v", "includes", "extended", "extensionHeight", "Number", "flat", "floating", "height", "image", "title", "makeBorderProps", "makeComponentProps", "makeElevationProps", "makeRoundedProps", "makeTagProps", "tag", "makeThemeProps", "VToolbar", "genericComponent", "name", "props", "setup", "_ref", "slots", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "toRef", "borderClasses", "useBorder", "elevationClasses", "useElevation", "roundedClasses", "useRounded", "themeClasses", "provideTheme", "isExtended", "ref", "extension", "contentHeight", "computed", "parseInt", "value", "provideDefaults", "VBtn", "variant", "useRender", "hasTitle", "hasImage", "_createVNode", "class", "style", "VImg", "VDefaultsProvider", "cover", "src", "VTabs", "convertToUnit", "prepend", "VToolbarTitle", "text", "append", "VExpandTransition", "makeScrollProps", "propsFactory", "scrollTarget", "type", "String", "scrollThreshold", "Number", "default", "useScroll", "props", "args", "arguments", "length", "undefined", "canScroll", "previousScroll", "target", "ref", "currentScroll", "savedScroll", "currentThreshold", "isScrollActive", "isScrollingUp", "computed", "scrollRatio", "clamp", "value", "onScroll", "targetEl", "pageYOffset", "scrollTop", "Math", "abs", "watch", "onMounted", "newTarget", "document", "querySelector", "window", "consoleWarn", "getCurrentInstance", "removeEventListener", "addEventListener", "passive", "immediate", "onBeforeUnmount", "VAppBar", "genericComponent", "name", "props", "scrollBehavior", "String", "modelValue", "type", "Boolean", "default", "location", "validator", "value", "includes", "makeVToolbarProps", "makeLayoutItemProps", "makeScrollProps", "height", "Number", "emits", "setup", "_ref", "slots", "vToolbarRef", "ref", "isActive", "useProxiedModel", "computed", "behavior", "Set", "split", "hide", "has", "inverted", "collapse", "elevate", "fadeImage", "canScroll", "currentScroll", "scrollThreshold", "isScrollingUp", "scrollRatio", "useScroll", "isCollapsed", "isFlat", "flat", "opacity", "undefined", "contentHeight", "extensionHeight", "setActive", "watch", "immediate", "ssrBootStyles", "useSsrBoot", "layoutItemStyles", "useLayoutItem", "id", "order", "parseInt", "position", "toRef", "layoutSize", "elementSize", "active", "absolute", "useRender", "toolbarProps", "VToolbar", "filterProps", "_createVNode", "_mergeProps", "class", "style", "VAppBarNavIcon", "genericComponent", "name", "props", "makeVBtnProps", "icon", "variant", "setup", "_ref", "slots", "useRender", "_createVNode", "VBtn", "_mergeProps", "VToolbarItems", "genericComponent", "name", "props", "makeComponentProps", "makeVariantProps", "variant", "setup", "_ref", "slots", "provideDefaults", "VBtn", "color", "toRef", "height", "useRender", "_createVNode", "class", "style", "default", "VAppBarTitle", "genericComponent", "name", "props", "makeVToolbarTitleProps", "setup", "_ref", "slots", "useRender", "_createVNode", "VToolbarTitle", "_mergeProps"]
}
