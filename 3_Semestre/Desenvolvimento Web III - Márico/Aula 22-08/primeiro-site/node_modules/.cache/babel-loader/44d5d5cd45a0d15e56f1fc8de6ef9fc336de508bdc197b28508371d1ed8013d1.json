{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\DSM\\\\3_Semestre\\\\Desenvolvimento Web III - M\\xE1rico\\\\Aula 22-08\\\\primeiro-site\\\\src\\\\Components\\\\Cadastro.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cadastro() {\n  _s();\n  const [input, setInput] = useState('');\n  const [tarefas, setTarefas] = useState([\"Pagar conta de luz\", \"Estudar programação\", \"Enviar a tarefa\"]);\n  const [namesUser, setNamesUser] = useState([]);\n  const [selectedColor, setSelectedColor] = useState('white'); // Estado para rastrear a cor selecionada\n\n  const tarefasStorage = localStorage.getItem('@tarefa');\n  const nameUser = localStorage.getItem('nome');\n  let name;\n  useEffect(() => {\n    if (tarefasStorage) {\n      setTarefas(JSON.parse(tarefasStorage));\n    }\n    if (nameUser !== '') {\n      name = prompt('Digite seu nome:');\n      setNamesUser(name);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('@tarefa', JSON.stringify(tarefas));\n    localStorage.setItem('nome', JSON.stringify(namesUser));\n  }, [tarefas, namesUser]);\n\n  // Função para lidar com a seleção de cor\n  const handleColorChange = color => {\n    setSelectedColor(color);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: selectedColor,\n      minHeight: '100vh',\n      transition: 'background-color 0.5s'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Ol\\xE1, \", localStorage.getItem('nome'), \"! Sua lista de tarefas:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegistro,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nome da Tarefa: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Digite uma Tarefa\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Registro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"blueviolet\",\n          checked: selectedColor === \"blueviolet\",\n          onChange: () => handleColorChange(\"blueviolet\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), \"Branco\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"cadetblue\",\n          checked: selectedColor === \"cadetblue\",\n          onChange: () => handleColorChange(\"cadetblue\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), \"Azul Claro\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"lightcoral\",\n          checked: selectedColor === \"lightcoral\",\n          onChange: () => handleColorChange(\"lightcoral\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), \"Verde Claro\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tarefas.map((tarefa, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: tarefa\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n  function handleRegistro(e) {\n    e.preventDefault();\n    setTarefas([...tarefas, input]);\n    setInput('');\n  }\n}\n_s(Cadastro, \"BTPYi22LrvqN0odi2FlxNpFV8T4=\");\n_c = Cadastro;\nexport default Cadastro;\nvar _c;\n$RefreshReg$(_c, \"Cadastro\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Cadastro","_s","input","setInput","tarefas","setTarefas","namesUser","setNamesUser","selectedColor","setSelectedColor","tarefasStorage","localStorage","getItem","nameUser","name","JSON","parse","prompt","setItem","stringify","handleColorChange","color","style","backgroundColor","minHeight","transition","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleRegistro","placeholder","value","onChange","e","target","type","checked","map","tarefa","index","preventDefault","_c","$RefreshReg$"],"sources":["D:/GitHub/DSM/3_Semestre/Desenvolvimento Web III - Márico/Aula 22-08/primeiro-site/src/Components/Cadastro.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Cadastro() {\r\n    const [input, setInput] = useState('');\r\n    const [tarefas, setTarefas] = useState([\r\n        \"Pagar conta de luz\",\r\n        \"Estudar programação\",\r\n        \"Enviar a tarefa\"\r\n    ]);\r\n    const [namesUser, setNamesUser] = useState([]);\r\n    const [selectedColor, setSelectedColor] = useState('white'); // Estado para rastrear a cor selecionada\r\n\r\n    const tarefasStorage = localStorage.getItem('@tarefa');\r\n    const nameUser = localStorage.getItem('nome');\r\n    let name;\r\n\r\n    useEffect(() => {\r\n        if (tarefasStorage) {\r\n            setTarefas(JSON.parse(tarefasStorage));\r\n        }\r\n        if (nameUser !== '') {\r\n            name = prompt('Digite seu nome:');\r\n            setNamesUser(name);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('@tarefa', JSON.stringify(tarefas));\r\n        localStorage.setItem('nome', JSON.stringify(namesUser));\r\n    }, [tarefas, namesUser]);\r\n\r\n    // Função para lidar com a seleção de cor\r\n    const handleColorChange = (color) => {\r\n        setSelectedColor(color);\r\n    };\r\n\r\n    return (\r\n        <div style={{ backgroundColor: selectedColor, minHeight: '100vh', transition: 'background-color 0.5s' }}>\r\n            <h1>Olá, {localStorage.getItem('nome')}! Sua lista de tarefas:</h1>\r\n\r\n            <form onSubmit={handleRegistro}>\r\n                <label>Nome da Tarefa: </label><br />\r\n                <input\r\n                    placeholder='Digite uma Tarefa'\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                /><br />\r\n\r\n                <button type='submit'>Registro</button>\r\n            </form>\r\n            <br /><br />\r\n\r\n            {/* Adicione Radio Buttons para escolher uma cor */}\r\n            <div>\r\n                <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        value=\"blueviolet\"\r\n                        checked={selectedColor === \"blueviolet\"}\r\n                        onChange={() => handleColorChange(\"blueviolet\")}\r\n                    />\r\n                    Branco\r\n                </label>\r\n                <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        value=\"cadetblue\"\r\n                        checked={selectedColor === \"cadetblue\"}\r\n                        onChange={() => handleColorChange(\"cadetblue\")}\r\n                    />\r\n                    Azul Claro\r\n                </label>\r\n                <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        value=\"lightcoral\"\r\n                        checked={selectedColor === \"lightcoral\"}\r\n                        onChange={() => handleColorChange(\"lightcoral\")}\r\n                    />\r\n                    Verde Claro\r\n                </label>\r\n            </div>\r\n            <br /><br />\r\n\r\n            <ul>\r\n                {tarefas.map((tarefa, index) => (\r\n                    <li key={index}>{tarefa}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n    function handleRegistro(e) {\r\n        e.preventDefault();\r\n        setTarefas([...tarefas, input]);\r\n        setInput('');\r\n    }\r\n}\r\n\r\nexport default Cadastro;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}